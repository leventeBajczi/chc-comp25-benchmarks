; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_132_3 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_32159_1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32))) (=> true (main_init_0 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret_new| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_32159_1 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |main_ret_new| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp_new| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp_new| (_ FloatingPoint 8 24)) (|main::term_new| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count_new| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32))) (=> (and (__loc_132_3 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) (and (and (and (and (and (not (= |main::temp| #b00000000000000000000000000000000)) (= |main::term_new| (fp.mul RNE |main::term| (fp.div RNE |main::x| ((_ to_fp_unsigned 8 24) RNE |main::count|))))) (= |main::exp_new| (fp.add RNE |main::exp| |main::term_new|))) (= |main::count_new| (bvadd |main::count| #b00000000000000000000000000000001))) true) true)) (__loc_132_3 |__VERIFIER_assert::cond| |main_ret| |main::temp_new| |main::result| |main::exp_new| |main::term_new| |main::x| |main::count_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp_new| (_ BitVec 32)) (|main::result_new| (_ FloatingPoint 8 24)) (|main::exp_new| (_ FloatingPoint 8 24)) (|main::term_new| (_ FloatingPoint 8 24)) (|main::x_new| (_ FloatingPoint 8 24)) (|main::count_new| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (__tmp_2 (_ FloatingPoint 8 24)) (__tmp_1 (_ FloatingPoint 8 24)) (__tmp_0 (_ BitVec 32))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) (and (and (and (and (and (and (and (and (and (and true true) (= __tmp_2 (fp #b0  #b01111111 #b00000000000000000000000))) (= __tmp_1 (fp #b0  #b01111111 #b00000000000000000000000))) (= __tmp_0 #b00000000000000000000000000000001)) (= |main::result_new| (fp.mul RNE ((_ to_fp 8 24) RNE #b00000000000000000000000000000010) (fp.div RNE ((_ to_fp 8 24) RNE #b00000000000000000000000000000001) (fp.add RNE ((_ to_fp 8 24) RNE #b00000000000000000000000000000001) (fp.neg |main::x_new|)))))) (= |main::term_new| (fp.mul RNE __tmp_1 (fp.div RNE |main::x_new| ((_ to_fp_unsigned 8 24) RNE __tmp_0))))) (= |main::exp_new| (fp.add RNE __tmp_2 |main::term_new|))) (= |main::count_new| (bvadd __tmp_0 #b00000000000000000000000000000001))) true) true)) (__loc_132_3 |__VERIFIER_assert::cond| |main_ret| |main::temp_new| |main::result_new| |main::exp_new| |main::term_new| |main::x_new| |main::count_new|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_132_3 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) (and (= |main::temp| #b00000000000000000000000000000000) (= |__VERIFIER_assert::cond_new| (ite (fp.geq |main::result| |main::exp|) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_32159_1 |__VERIFIER_assert::cond_new| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32))) (=> (and (__loc_32159_1 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_4 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::result| (_ FloatingPoint 8 24)) (|main::exp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32))) (=> (main_error_4 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::result| |main::exp| |main::term| |main::x| |main::count|) false)))

(check-sat)
(exit)