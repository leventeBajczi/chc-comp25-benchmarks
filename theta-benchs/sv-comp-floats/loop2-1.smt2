; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_198_3 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_50233_1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> true (main_init_0 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret_new| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_50233_1 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |main_ret_new| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp_new| (_ BitVec 32)) (|main::oddExp_new| (_ FloatingPoint 8 24)) (|main::evenExp_new| (_ FloatingPoint 8 24)) (|main::term_new| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count_new| (_ BitVec 32)) (|main::multFactor_new| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (__tmp_1 (_ FloatingPoint 8 24)) (__tmp_0 (_ BitVec 32))) (=> (and (__loc_198_3 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) (and (and (and (and (and (and (and (and (and (not (= |main::temp| #b00000000000000000000000000000000)) (= __tmp_1 (fp.mul RNE |main::term| (fp.div RNE |main::x| ((_ to_fp_unsigned 8 24) RNE |main::count|))))) (= |main::multFactor_new| (ite (not (= #b00000000000000000000000000000000 (ite (= (bvlshr |main::count| #b00000000000000000000000000000001) #b00000000000000000000000000000000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) #b00000000000000000000000000000001 #b11111111111111111111111111111111))) (= |main::evenExp_new| (fp.add RNE |main::evenExp| (fp.mul RNE ((_ to_fp 8 24) RNE |main::multFactor_new|) __tmp_1)))) (= __tmp_0 (bvadd |main::count| #b00000000000000000000000000000001))) (= |main::term_new| (fp.mul RNE __tmp_1 (fp.div RNE |main::x| ((_ to_fp_unsigned 8 24) RNE __tmp_0))))) (= |main::oddExp_new| (fp.add RNE |main::oddExp| (fp.mul RNE ((_ to_fp 8 24) RNE |main::multFactor_new|) |main::term_new|)))) (= |main::count_new| (bvadd __tmp_0 #b00000000000000000000000000000001))) true) true)) (__loc_198_3 |__VERIFIER_assert::cond| |main_ret| |main::temp_new| |main::oddExp_new| |main::evenExp_new| |main::term_new| |main::x| |main::count_new| |main::multFactor_new| |pi| |main::octant| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp_new| (_ BitVec 32)) (|main::oddExp_new| (_ FloatingPoint 8 24)) (|main::evenExp_new| (_ FloatingPoint 8 24)) (|main::term_new| (_ FloatingPoint 8 24)) (|main::x_new| (_ FloatingPoint 8 24)) (|main::count_new| (_ BitVec 32)) (|main::multFactor_new| (_ BitVec 32)) (|pi_new| (_ FloatingPoint 8 24)) (|main::octant_new| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond_new| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (__tmp_4 (_ FloatingPoint 8 24)) (__tmp_5 (_ FloatingPoint 8 24)) (__tmp_3 (_ FloatingPoint 8 24)) (__tmp_1 (_ BitVec 32)) (__tmp_6 (_ BitVec 32)) (__tmp_0 (_ FloatingPoint 8 24)) (__tmp_2 (_ BitVec 32))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= |pi_new| (fp #b0  #b10000000 #b10010010000111111010000)) true) true) (= |main::octant_new| (fp.div RNE |pi_new| ((_ to_fp 8 24) RNE #b00000000000000000000000000000011)))) (= |assume_abort_if_not::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.gt |main::x_new| ((_ to_fp 8 24) RNE #b00000000000000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.lt |main::x_new| |main::octant_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= |assume_abort_if_not::cond_new| #b00000000000000000000000000000000))) (= __tmp_4 |main::x_new|)) (= __tmp_5 (fp #b0  #b01111111 #b00000000000000000000000))) (= __tmp_3 |main::x_new|)) (= __tmp_1 #b00000000000000000000000000000010)) (= __tmp_6 #b00000000000000000000000000000000)) (= __tmp_0 (fp.mul RNE __tmp_3 (fp.div RNE |main::x_new| ((_ to_fp_unsigned 8 24) RNE __tmp_1))))) (= |main::multFactor_new| (ite (not (= #b00000000000000000000000000000000 (ite (= (bvlshr __tmp_1 #b00000000000000000000000000000001) #b00000000000000000000000000000000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) #b00000000000000000000000000000001 #b11111111111111111111111111111111))) (= |main::evenExp_new| (fp.add RNE __tmp_5 (fp.mul RNE ((_ to_fp 8 24) RNE |main::multFactor_new|) __tmp_0)))) (= __tmp_2 (bvadd __tmp_1 #b00000000000000000000000000000001))) (= |main::term_new| (fp.mul RNE __tmp_0 (fp.div RNE |main::x_new| ((_ to_fp_unsigned 8 24) RNE __tmp_2))))) (= |main::oddExp_new| (fp.add RNE __tmp_4 (fp.mul RNE ((_ to_fp 8 24) RNE |main::multFactor_new|) |main::term_new|)))) (= |main::count_new| (bvadd __tmp_2 #b00000000000000000000000000000001))) true) true)) (__loc_198_3 |__VERIFIER_assert::cond| |main_ret| |main::temp_new| |main::oddExp_new| |main::evenExp_new| |main::term_new| |main::x_new| |main::count_new| |main::multFactor_new| |pi_new| |main::octant_new| |assume_abort_if_not::cond_new|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_198_3 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) (and (= |main::temp| #b00000000000000000000000000000000) (= |__VERIFIER_assert::cond_new| (ite (fp.geq |main::oddExp| |main::evenExp|) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_50233_1 |__VERIFIER_assert::cond_new| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> (and (__loc_50233_1 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_4 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::temp| (_ BitVec 32)) (|main::oddExp| (_ FloatingPoint 8 24)) (|main::evenExp| (_ FloatingPoint 8 24)) (|main::term| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::count| (_ BitVec 32)) (|main::multFactor| (_ BitVec 32)) (|pi| (_ FloatingPoint 8 24)) (|main::octant| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> (main_error_4 |__VERIFIER_assert::cond| |main_ret| |main::temp| |main::oddExp| |main::evenExp| |main::term| |main::x| |main::count| |main::multFactor| |pi| |main::octant| |assume_abort_if_not::cond|) false)))

(check-sat)
(exit)