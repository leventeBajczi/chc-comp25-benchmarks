; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_52_3 ((_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_104_1 ((_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24)) Bool)

; facts, rules, queries
(assert (forall ((|main::main__i| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24))) (=> true (main_init_0 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|))))
(assert (forall ((|main::main__i| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret_new| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_104_1 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) (and (not (= |main::if0::anonymous1::__VERIFIER_assert__cond| #b00000000000000000000000000000000)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret_new| |main::main__tick|))))
(assert (forall ((|main::main__i_new| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time_new| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick_new| (_ FloatingPoint 8 24)) (|main::main__i| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::main__tick| (_ FloatingPoint 8 24))) (=> (and (main_init_0 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) (and (and (= |main::main__tick_new| (fp #b0  #b01111011 #b10011001100110011001101)) (= |main::main__time_new| (fp #b1  #b00000000 #b00000000000000000000000))) (= |main::main__i_new| #b00000000000000000000000000000000))) (__loc_52_3 |main::main__i_new| |main::if0::anonymous1::__tmp_1| |main::main__time_new| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick_new|))))
(assert (forall ((|main::main__i_new| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time_new| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24)) (|main::main__i| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24))) (=> (and (__loc_52_3 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) (and (and (bvslt |main::main__i| #b00000000000000000000000000001010) (= |main::main__time_new| (fp.add RNE |main::main__time| |main::main__tick|))) (= |main::main__i_new| (bvadd |main::main__i| #b00000000000000000000000000000001)))) (__loc_52_3 |main::main__i_new| |main::if0::anonymous1::__tmp_1| |main::main__time_new| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|))))
(assert (forall ((|main::main__i| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1_new| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond_new| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32))) (=> (and (__loc_52_3 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) (and (and (not (bvslt |main::main__i| #b00000000000000000000000000001010)) (= |main::if0::anonymous1::__tmp_1_new| (ite (not (fp.eq ((_ to_fp 11 53) RNE |main::main__time|) (fp #b0  #b01111111111 #b0000000000000000000000000000000000000000000000000000))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (= |main::if0::anonymous1::__VERIFIER_assert__cond_new| |main::if0::anonymous1::__tmp_1_new|))) (__loc_104_1 |main::main__i| |main::if0::anonymous1::__tmp_1_new| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond_new| |main_ret| |main::main__tick|))))
(assert (forall ((|main::main__i| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24))) (=> (and (__loc_104_1 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) (= |main::if0::anonymous1::__VERIFIER_assert__cond| #b00000000000000000000000000000000)) (main_error_4 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|))))
(assert (forall ((|main::main__i| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::main__time| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__tick| (_ FloatingPoint 8 24))) (=> (main_error_4 |main::main__i| |main::if0::anonymous1::__tmp_1| |main::main__time| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret| |main::main__tick|) false)))

(check-sat)
(exit)