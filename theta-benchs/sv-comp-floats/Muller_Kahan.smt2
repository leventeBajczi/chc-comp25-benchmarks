; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun __loc_95_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun __loc_32146_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_32146_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::i| |main::x0| |main::x1| |main::x2|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::x0_new| (_ FloatingPoint 11 53)) (|main::x1_new| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) (and (and (= |main::x0_new| (fp.div RNE (fp #b0  #b10000000010 #b0110000000000000000000000000000000000000000000000000) (fp #b0  #b10000000000 #b0000000000000000000000000000000000000000000000000000))) (= |main::x1_new| (fp.div RNE (fp #b0  #b10000000100 #b1110100000000000000000000000000000000000000000000000) (fp #b0  #b10000000010 #b0110000000000000000000000000000000000000000000000000)))) (= |main::i_new| #b00000000000000000000000000000000))) (__loc_95_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::x0_new| |main::x1_new| |main::x2|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::x0_new| (_ FloatingPoint 11 53)) (|main::x1_new| (_ FloatingPoint 11 53)) (|main::x2_new| (_ FloatingPoint 11 53)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53))) (=> (and (__loc_95_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) (and (and (and (and (bvslt |main::i| #b00000000000000000000000001100100) (= |main::x2_new| (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE (fp #b0  #b10000001001 #b0001101010000000000000000000000000000000000000000000) (fp.neg (fp.div RNE (fp #b0  #b10000001010 #b0111011100000000000000000000000000000000000000000000) |main::x0|))) |main::x1|)) (fp #b0  #b10000000101 #b1011110000000000000000000000000000000000000000000000)))) (= |main::x0_new| |main::x1|)) (= |main::x1_new| |main::x2_new|)) (= |main::i_new| (bvadd |main::i| #b00000000000000000000000000000001)))) (__loc_95_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::x0_new| |main::x1_new| |main::x2_new|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_95_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) (and (not (bvslt |main::i| #b00000000000000000000000001100100)) (= |__VERIFIER_assert::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.geq |main::x0| (fp #b0  #b10000000101 #b1000110000000000000000000000000000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.leq |main::x0| (fp #b0  #b10000000101 #b1001010000000000000000000000000000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_32146_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53))) (=> (and (__loc_32146_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::x0| (_ FloatingPoint 11 53)) (|main::x1| (_ FloatingPoint 11 53)) (|main::x2| (_ FloatingPoint 11 53))) (=> (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::x0| |main::x1| |main::x2|) false)))

(check-sat)
(exit)