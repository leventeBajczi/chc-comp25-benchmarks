; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun __loc_47220_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_error_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53)) (|call___isinf_ret5| (_ BitVec 32)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___isinff_ret4| (_ BitVec 32)) (|call___isinfl_ret6| (_ BitVec 32)) (|call___isnan_ret9| (_ BitVec 32)) (|call___isnanf_ret8| (_ BitVec 32)) (|call___isnanl_ret10| (_ BitVec 32)) (|main::d1| (_ FloatingPoint 11 53)) (|call_trunc_ret13| (_ FloatingPoint 11 53))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53)) (|call___isinf_ret5| (_ BitVec 32)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___isinff_ret4| (_ BitVec 32)) (|call___isinfl_ret6| (_ BitVec 32)) (|call___isnan_ret9| (_ BitVec 32)) (|call___isnanf_ret8| (_ BitVec 32)) (|call___isnanl_ret10| (_ BitVec 32)) (|main::d1| (_ FloatingPoint 11 53)) (|call_trunc_ret13| (_ FloatingPoint 11 53)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_47220_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::d_new| (_ FloatingPoint 11 53)) (|call___isinf_ret5_new| (_ BitVec 32)) (|assume_abort_if_not::cond_new| (_ BitVec 32)) (|call___isinff_ret4| (_ BitVec 32)) (|call___isinfl_ret6| (_ BitVec 32)) (|call___isnan_ret9_new| (_ BitVec 32)) (|call___isnanf_ret8| (_ BitVec 32)) (|call___isnanl_ret10| (_ BitVec 32)) (|main::d1_new| (_ FloatingPoint 11 53)) (|call_trunc_ret13_new| (_ FloatingPoint 11 53)) (|__VERIFIER_assert::cond| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53)) (|call___isinf_ret5| (_ BitVec 32)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___isnan_ret9| (_ BitVec 32)) (|main::d1| (_ FloatingPoint 11 53)) (|call_trunc_ret13| (_ FloatingPoint 11 53)) (__tmp_0 (_ BitVec 32)) (__tmp_1 (_ BitVec 32))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|) (and (and (and (and (and (and (and (and (and (and (and (and true true) (= |call___isinf_ret5_new| (ite (fp.isInfinite |main::d_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (= __tmp_0 (ite (= (ite (not (= #b00000000000000000000000000000000 (ite (= #b00000000000000000000000000001000 #b00000000000000000000000000000100) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) |call___isinff_ret4| (ite (not (= #b00000000000000000000000000000000 (ite (= #b00000000000000000000000000001000 #b00000000000000000000000000001000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) |call___isinf_ret5_new| |call___isinfl_ret6|)) #b00000000000000000000000000000000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= __tmp_0 #b00000000000000000000000000000000))) (= |call___isnan_ret9_new| (ite (fp.isNaN |main::d_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (= __tmp_1 (ite (= (ite (not (= #b00000000000000000000000000000000 (ite (= #b00000000000000000000000000001000 #b00000000000000000000000000000100) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) |call___isnanf_ret8| (ite (not (= #b00000000000000000000000000000000 (ite (= #b00000000000000000000000000001000 #b00000000000000000000000000001000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) |call___isnan_ret9_new| |call___isnanl_ret10|)) #b00000000000000000000000000000000) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= __tmp_1 #b00000000000000000000000000000000))) (= |assume_abort_if_not::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.lt |main::d_new| ((_ to_fp 11 53) RNE #b0111111111111111111111111111111111111111111111111111111111111111)) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.gt |main::d_new| ((_ to_fp 11 53) RNE (bvadd (bvneg #b0111111111111111111111111111111111111111111111111111111111111111) (bvneg #b0000000000000000000000000000000000000000000000000000000000000001)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= |assume_abort_if_not::cond_new| #b00000000000000000000000000000000))) (= |main::d1_new| ((_ to_fp 11 53) RNE ((_ fp.to_sbv 64) RTZ |main::d_new|) ))) (= |call_trunc_ret13_new| (fp.roundToIntegral RTZ |main::d_new|))) (= |__VERIFIER_assert::cond_new| (ite (fp.eq |call_trunc_ret13_new| |main::d1_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_47220_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::d_new| |call___isinf_ret5_new| |assume_abort_if_not::cond_new| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9_new| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1_new| |call_trunc_ret13_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53)) (|call___isinf_ret5| (_ BitVec 32)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___isinff_ret4| (_ BitVec 32)) (|call___isinfl_ret6| (_ BitVec 32)) (|call___isnan_ret9| (_ BitVec 32)) (|call___isnanf_ret8| (_ BitVec 32)) (|call___isnanl_ret10| (_ BitVec 32)) (|main::d1| (_ FloatingPoint 11 53)) (|call_trunc_ret13| (_ FloatingPoint 11 53))) (=> (and (__loc_47220_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53)) (|call___isinf_ret5| (_ BitVec 32)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___isinff_ret4| (_ BitVec 32)) (|call___isinfl_ret6| (_ BitVec 32)) (|call___isnan_ret9| (_ BitVec 32)) (|call___isnanf_ret8| (_ BitVec 32)) (|call___isnanl_ret10| (_ BitVec 32)) (|main::d1| (_ FloatingPoint 11 53)) (|call_trunc_ret13| (_ FloatingPoint 11 53))) (=> (main_error_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::d| |call___isinf_ret5| |assume_abort_if_not::cond| |call___isinff_ret4| |call___isinfl_ret6| |call___isnan_ret9| |call___isnanf_ret8| |call___isnanl_ret10| |main::d1| |call_trunc_ret13|) false)))

(check-sat)
(exit)