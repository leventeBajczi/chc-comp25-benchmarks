; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_final_2 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53)) Bool)
(declare-fun __loc_123_1 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_error_3 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 11 53)) Bool)

; facts, rules, queries
(assert (forall ((|main::f| (_ FloatingPoint 8 24)) (|main::ff| (_ FloatingPoint 8 24)) (|call___isnanf_ret1| (_ BitVec 32)) (|call___isnanf_ret4| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53))) (=> true (main_init_0 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|))))
(assert (forall ((|main::f| (_ FloatingPoint 8 24)) (|main::ff| (_ FloatingPoint 8 24)) (|call___isnanf_ret1| (_ BitVec 32)) (|call___isnanf_ret4| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53))) (=> (and (__loc_123_1 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|) (or (not (= #b00000000000000000000000000000000 (ite (fp.eq |main::f| |main::ff|) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (and (not (= #b00000000000000000000000000000000 |call___isnanf_ret1|)) (not (= #b00000000000000000000000000000000 |call___isnanf_ret4|))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))))) (main_final_2 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|))))
(assert (forall ((|main::f_new| (_ FloatingPoint 8 24)) (|main::ff_new| (_ FloatingPoint 8 24)) (|call___isnanf_ret1_new| (_ BitVec 32)) (|call___isnanf_ret4_new| (_ BitVec 32)) (|main::d_new| (_ FloatingPoint 11 53)) (|main::f| (_ FloatingPoint 8 24)) (|main::ff| (_ FloatingPoint 8 24)) (|call___isnanf_ret1| (_ BitVec 32)) (|call___isnanf_ret4| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53))) (=> (and (main_init_0 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|) (and (and (and (and (and true true) (= |main::d_new| ((_ to_fp 11 53) RNE |main::f_new|))) (= |main::ff_new| ((_ to_fp 8 24) RNE |main::d_new|))) (= |call___isnanf_ret1_new| (ite (fp.isNaN |main::f_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (= |call___isnanf_ret4_new| (ite (fp.isNaN |main::ff_new|) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_123_1 |main::f_new| |main::ff_new| |call___isnanf_ret1_new| |call___isnanf_ret4_new| |main::d_new|))))
(assert (forall ((|main::f| (_ FloatingPoint 8 24)) (|main::ff| (_ FloatingPoint 8 24)) (|call___isnanf_ret1| (_ BitVec 32)) (|call___isnanf_ret4| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53))) (=> (and (__loc_123_1 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|) (not (or (not (= #b00000000000000000000000000000000 (ite (fp.eq |main::f| |main::ff|) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (and (not (= #b00000000000000000000000000000000 |call___isnanf_ret1|)) (not (= #b00000000000000000000000000000000 |call___isnanf_ret4|))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))))) (main_error_3 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|))))
(assert (forall ((|main::f| (_ FloatingPoint 8 24)) (|main::ff| (_ FloatingPoint 8 24)) (|call___isnanf_ret1| (_ BitVec 32)) (|call___isnanf_ret4| (_ BitVec 32)) (|main::d| (_ FloatingPoint 11 53))) (=> (main_error_3 |main::f| |main::ff| |call___isnanf_ret1| |call___isnanf_ret4| |main::d|) false)))

(check-sat)
(exit)