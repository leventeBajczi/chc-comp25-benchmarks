; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_89_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_32134_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_32134_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::x| |main::y| |main::z|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x_new| (_ FloatingPoint 8 24)) (|main::y_new| (_ FloatingPoint 8 24)) (|main::z_new| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) (and (and (= |main::x_new| (fp #b0  #b01111111 #b00000000000000000000000)) (= |main::y_new| (fp #b0  #b10010110 #b00110001001011010000000))) (= |main::z_new| (fp #b0  #b10000100 #b01010000000000000000000)))) (__loc_89_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x_new| |main::y_new| |main::z_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x_new| (_ FloatingPoint 8 24)) (|main::y_new| (_ FloatingPoint 8 24)) (|main::z_new| (_ FloatingPoint 8 24)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24))) (=> (and (__loc_89_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) (and (and (and (fp.lt |main::x| |main::y|) (= |main::x_new| (fp.add RNE |main::x| (fp #b0  #b01111111 #b00000000000000000000000)))) (= |main::y_new| (fp.add RNE |main::y| (fp #b1  #b01111111 #b00000000000000000000000)))) (= |main::z_new| (fp.add RNE |main::z| (fp #b0  #b01111111 #b00000000000000000000000))))) (__loc_89_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x_new| |main::y_new| |main::z_new|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_89_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) (and (not (fp.lt |main::x| |main::y|)) (= |__VERIFIER_assert::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.geq |main::z| (fp #b0  #b00000000 #b00000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.leq ((_ to_fp 11 53) RNE |main::z|) (fp #b0  #b10000011001 #b0111110101111000010000000000000000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_32134_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24))) (=> (and (__loc_32134_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 8 24)) (|main::y| (_ FloatingPoint 8 24)) (|main::z| (_ FloatingPoint 8 24))) (=> (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::z|) false)))

(check-sat)
(exit)