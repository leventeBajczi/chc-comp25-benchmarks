; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_84_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun __loc_32121_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)
(declare-fun main_error_4 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_32121_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::i| |main::time| |main::tick|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::time_new| (_ FloatingPoint 8 24)) (|main::tick_new| (_ FloatingPoint 8 24)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) (and (and (= |main::tick_new| (fp.div RNE (fp #b0  #b01111111 #b00000000000000000000000) (fp #b0  #b10000010 #b01000000000000000000000))) (= |main::time_new| (fp #b0  #b00000000 #b00000000000000000000000))) (= |main::i_new| #b00000000000000000000000000000000))) (__loc_84_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::time_new| |main::tick_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::time_new| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24))) (=> (and (__loc_84_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) (and (and (bvslt |main::i| #b00000000000000000000000000001010) (= |main::time_new| (fp.add RNE |main::time| |main::tick|))) (= |main::i_new| (bvadd |main::i| #b00000000000000000000000000000001)))) (__loc_84_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::time_new| |main::tick|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_84_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) (and (not (bvslt |main::i| #b00000000000000000000000000001010)) (= |__VERIFIER_assert::cond_new| (ite (not (fp.eq ((_ to_fp 11 53) RNE |main::time|) (fp #b0  #b01111111111 #b0000000000000000000000000000000000000000000000000000))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_32121_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24))) (=> (and (__loc_32121_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::time| (_ FloatingPoint 8 24)) (|main::tick| (_ FloatingPoint 8 24))) (=> (main_error_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::time| |main::tick|) false)))

(check-sat)
(exit)