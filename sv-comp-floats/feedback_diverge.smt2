; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_115_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_126_4 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun __loc_50214_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)
(declare-fun main_error_5 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ BitVec 32) (_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ FloatingPoint 8 24) (_ BitVec 32)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_50214_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::A_new| (_ FloatingPoint 8 24)) (|main::B_new| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (and (= |main::A_new| (fp #b0  #b00000000 #b00000000000000000000000)) (= |main::B_new| (fp #b0  #b00000000 #b00000000000000000000000))) (= |main::i_new| #b00000000000000000000000000000000))) (__loc_115_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::A_new| |main::B_new| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::A_new| (_ FloatingPoint 8 24)) (|main::B_new| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X_new| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|main::X| (_ FloatingPoint 8 24))) (=> (and (__loc_126_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (and (and (and (= |call___VERIFIER_nondet_int_ret4| #b00000000000000000000000000000000) (= |main::X_new| |main::B|)) (= |main::B_new| (fp.add RNE |main::B| (fp.neg (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE (fp #b0  #b10000000 #b00000000000000000000000) |main::B|) (fp.neg |main::A|)) (fp.neg |main::X_new|)) (fp #b0  #b01110111 #b01000111101011100001010)))))) (= |main::A_new| |main::X_new|)) (= |main::i_new| (bvadd |main::i| #b00000000000000000000000000000001)))) (__loc_115_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::A_new| |main::B_new| |call___VERIFIER_nondet_int_ret4| |main::X_new| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i_new| (_ BitVec 32)) (|main::A_new| (_ FloatingPoint 8 24)) (|main::B_new| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X_new| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond_new| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> (and (__loc_126_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (and (and (and (and (and (and (not (= |call___VERIFIER_nondet_int_ret4| #b00000000000000000000000000000000)) true) true) (= |assume_abort_if_not::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.geq |main::X_new| (fp.neg (fp #b0  #b10000011 #b01000000000000000000000))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.leq |main::X_new| (fp #b0  #b10000011 #b01000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= |assume_abort_if_not::cond_new| #b00000000000000000000000000000000))) (= |main::B_new| (fp.add RNE |main::B| (fp.neg (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE (fp #b0  #b10000000 #b00000000000000000000000) |main::B|) (fp.neg |main::A|)) (fp.neg |main::X_new|)) (fp #b0  #b01110111 #b01000111101011100001010)))))) (= |main::A_new| |main::X_new|)) (= |main::i_new| (bvadd |main::i| #b00000000000000000000000000000001)))) (__loc_115_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i_new| |main::A_new| |main::B_new| |call___VERIFIER_nondet_int_ret4| |main::X_new| |assume_abort_if_not::cond_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4_new| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32))) (=> (and (__loc_115_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (and (bvslt |main::i| #b00000000001101101110111010000000) true) true)) (__loc_126_4 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4_new| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32)) (|__VERIFIER_assert::cond| (_ BitVec 32))) (=> (and (__loc_115_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (and (not (bvslt |main::i| #b00000000001101101110111010000000)) (= |__VERIFIER_assert::cond_new| (ite (and (not (= #b00000000000000000000000000000000 (ite (fp.geq |main::A| (fp.neg (fp #b0  #b10000101 #b10010000000000000000000))) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (not (= #b00000000000000000000000000000000 (ite (fp.leq |main::A| (fp #b0  #b10000101 #b10010000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_50214_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> (and (__loc_50214_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_5 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::i| (_ BitVec 32)) (|main::A| (_ FloatingPoint 8 24)) (|main::B| (_ FloatingPoint 8 24)) (|call___VERIFIER_nondet_int_ret4| (_ BitVec 32)) (|main::X| (_ FloatingPoint 8 24)) (|assume_abort_if_not::cond| (_ BitVec 32))) (=> (main_error_5 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::i| |main::A| |main::B| |call___VERIFIER_nondet_int_ret4| |main::X| |assume_abort_if_not::cond|) false)))

(check-sat)
(exit)