; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_final_2 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun __loc_32107_1 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)
(declare-fun main_error_3 ((_ BitVec 32) (_ BitVec 1) (_ BitVec 32) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53) (_ FloatingPoint 11 53)) Bool)

; facts, rules, queries
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 11 53)) (|main::y| (_ FloatingPoint 11 53)) (|main::r| (_ FloatingPoint 11 53))) (=> true (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret_new| (_ BitVec 1)) (|main_ret_new| (_ BitVec 32)) (|main::x| (_ FloatingPoint 11 53)) (|main::y| (_ FloatingPoint 11 53)) (|main::r| (_ FloatingPoint 11 53)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_32107_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|) (and (and (not (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (= |__VERIFIER_assert_ret_new| #b0)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret_new| |main_ret_new| |main::x| |main::y| |main::r|))))
(assert (forall ((|__VERIFIER_assert::cond_new| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x_new| (_ FloatingPoint 11 53)) (|main::y_new| (_ FloatingPoint 11 53)) (|main::r_new| (_ FloatingPoint 11 53)) (|__VERIFIER_assert::cond| (_ BitVec 32)) (|main::x| (_ FloatingPoint 11 53)) (|main::y| (_ FloatingPoint 11 53)) (|main::r| (_ FloatingPoint 11 53))) (=> (and (main_init_0 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|) (and (and (and (= |main::x_new| (fp #b0  #b10000001111 #b0010111100110001000000000000000000000000000000000000)) (= |main::y_new| (fp #b0  #b10000001110 #b0000001010010000000000000000000000000000000000000000))) (= |main::r_new| (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp #b0  #b10000000111 #b0100110111000000000000000000000000000000000000000000) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) (fp.mul RNE (fp.mul RNE |main::x_new| |main::x_new|) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp #b0  #b10000000010 #b0110000000000000000000000000000000000000000000000000) |main::x_new|) |main::x_new|) |main::y_new|) |main::y_new|) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE |main::y_new| |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp #b0  #b10000000101 #b1110010000000000000000000000000000000000000000000000) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|))) (fp.neg (fp #b0  #b10000000000 #b0000000000000000000000000000000000000000000000000000))))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp #b0  #b10000000001 #b0110000000000000000000000000000000000000000000000000) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|) |main::y_new|)) (fp.div RNE |main::x_new| (fp.mul RNE (fp #b0  #b10000000000 #b0000000000000000000000000000000000000000000000000000) |main::y_new|))))) (= |__VERIFIER_assert::cond_new| (ite (fp.geq |main::r_new| ((_ to_fp 11 53) RNE #b00000000000000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))) (__loc_32107_1 |__VERIFIER_assert::cond_new| |__VERIFIER_assert_ret| |main_ret| |main::x_new| |main::y_new| |main::r_new|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 11 53)) (|main::y| (_ FloatingPoint 11 53)) (|main::r| (_ FloatingPoint 11 53))) (=> (and (__loc_32107_1 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|) (= |__VERIFIER_assert::cond| #b00000000000000000000000000000000)) (main_error_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|))))
(assert (forall ((|__VERIFIER_assert::cond| (_ BitVec 32)) (|__VERIFIER_assert_ret| (_ BitVec 1)) (|main_ret| (_ BitVec 32)) (|main::x| (_ FloatingPoint 11 53)) (|main::y| (_ FloatingPoint 11 53)) (|main::r| (_ FloatingPoint 11 53))) (=> (main_error_3 |__VERIFIER_assert::cond| |__VERIFIER_assert_ret| |main_ret| |main::x| |main::y| |main::r|) false)))

(check-sat)
(exit)