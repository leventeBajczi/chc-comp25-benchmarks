; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun main_final_2 ((_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun __loc_45_3 ((_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun __loc_85_1 ((_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun main_error_4 ((_ FloatingPoint 11 53) (_ BitVec 32) (_ BitVec 32)) Bool)

; facts, rules, queries
(assert (forall ((|d| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32))) (=> true (main_init_0 |d| |call___VERIFIER_nondet_int_ret1| |main::x|))))
(assert (forall ((|d| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32))) (=> (and (__loc_85_1 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) (fp.eq |d| (fp #b0  #b10000000000 #b0000000000000000000000000000000000000000000000000000))) (main_final_2 |d| |call___VERIFIER_nondet_int_ret1| |main::x|))))
(assert (forall ((|d_new| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1_new| (_ BitVec 32)) (|main::x_new| (_ BitVec 32)) (|d| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32))) (=> (and (main_init_0 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) (and (and (and (= |d_new| (fp #b0  #b00000000000 #b0000000000000000000000000000000000000000000000000000)) (= |main::x_new| #b00000000000000000000000000000010)) true) true)) (__loc_45_3 |d_new| |call___VERIFIER_nondet_int_ret1_new| |main::x_new|))))
(assert (forall ((|d_new| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32)) (|d| (_ FloatingPoint 11 53)) (__tmp_0 (_ FloatingPoint 11 53)) (__tmp_1 (_ FloatingPoint 11 53))) (=> (and (__loc_45_3 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) (and (and (and (= |call___VERIFIER_nondet_int_ret1| #b00000000000000000000000000000000) (= __tmp_0 (fp #b0  #b01111111111 #b0000000000000000000000000000000000000000000000000000))) (= __tmp_1 (fp.add RNE __tmp_0 ((_ to_fp 11 53) RNE (ite (= |main::x| #b00000000000000000000000000000010) #b00000000000000000000000000000001 #b00000000000000000000000000000000))))) (= |d_new| (fp.add RNE __tmp_1 ((_ to_fp 11 53) RNE (ite (bvsgt |main::x| #b00000000000000000000000000000011) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))))) (__loc_85_1 |d_new| |call___VERIFIER_nondet_int_ret1| |main::x|))))
(assert (forall ((|d_new| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x_new| (_ BitVec 32)) (|d| (_ FloatingPoint 11 53)) (|main::x| (_ BitVec 32)) (__tmp_0 (_ FloatingPoint 11 53)) (__tmp_1 (_ FloatingPoint 11 53))) (=> (and (__loc_45_3 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) (and (and (and (and (not (= |call___VERIFIER_nondet_int_ret1| #b00000000000000000000000000000000)) (= |main::x_new| #b00000000000000000000000000000100)) (= __tmp_0 (fp #b0  #b01111111111 #b0000000000000000000000000000000000000000000000000000))) (= __tmp_1 (fp.add RNE __tmp_0 ((_ to_fp 11 53) RNE (ite (= |main::x_new| #b00000000000000000000000000000010) #b00000000000000000000000000000001 #b00000000000000000000000000000000))))) (= |d_new| (fp.add RNE __tmp_1 ((_ to_fp 11 53) RNE (ite (bvsgt |main::x_new| #b00000000000000000000000000000011) #b00000000000000000000000000000001 #b00000000000000000000000000000000)))))) (__loc_85_1 |d_new| |call___VERIFIER_nondet_int_ret1| |main::x_new|))))
(assert (forall ((|d| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32))) (=> (and (__loc_85_1 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) (not (fp.eq |d| (fp #b0  #b10000000000 #b0000000000000000000000000000000000000000000000000000)))) (main_error_4 |d| |call___VERIFIER_nondet_int_ret1| |main::x|))))
(assert (forall ((|d| (_ FloatingPoint 11 53)) (|call___VERIFIER_nondet_int_ret1| (_ BitVec 32)) (|main::x| (_ BitVec 32))) (=> (main_error_4 |d| |call___VERIFIER_nondet_int_ret1| |main::x|) false)))

(check-sat)
(exit)