; generated by Theta
; https://github.com/ftsrg/theta/

(set-logic HORN)

; declarations
(declare-fun main_init_0 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun main_final_2 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun __loc_40_3 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun __loc_92_1 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun main_error_4 ((_ FloatingPoint 8 24) (_ FloatingPoint 8 24) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)

; facts, rules, queries
(assert (forall ((|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> true (main_init_0 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|))))
(assert (forall ((|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret_new| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_92_1 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) (and (not (= |main::if0::anonymous1::__VERIFIER_assert__cond| #b00000000000000000000000000000000)) (= |main_ret_new| #b00000000000000000000000000000000))) (main_final_2 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret_new|))))
(assert (forall ((|main::main__x1_new| (_ FloatingPoint 8 24)) (|main::main__x_new| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24))) (=> (and (main_init_0 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) (and (= |main::main__x_new| (fp #b0  #b01111111 #b00000000000000000000000)) (= |main::main__x1_new| ((_ to_fp 8 24) RNE (fp.div RNE ((_ to_fp 11 53) RNE |main::main__x_new|) (fp #b0  #b10000000000 #b0100000000000000000000000000000000000000000000000000)))))) (__loc_40_3 |main::main__x1_new| |main::main__x_new| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|))))
(assert (forall ((|main::main__x1_new| (_ FloatingPoint 8 24)) (|main::main__x_new| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24))) (=> (and (__loc_40_3 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) (and (and (not (fp.eq |main::main__x1| |main::main__x|)) (= |main::main__x_new| |main::main__x1|)) (= |main::main__x1_new| ((_ to_fp 8 24) RNE (fp.div RNE ((_ to_fp 11 53) RNE |main::main__x_new|) (fp #b0  #b10000000000 #b0100000000000000000000000000000000000000000000000000)))))) (__loc_40_3 |main::main__x1_new| |main::main__x_new| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|))))
(assert (forall ((|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1_new| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond_new| (_ BitVec 32)) (|main_ret| (_ BitVec 32)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32))) (=> (and (__loc_40_3 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) (and (and (not (not (fp.eq |main::main__x1| |main::main__x|))) (= |main::if0::anonymous1::__tmp_1_new| (ite (fp.eq |main::main__x| (fp #b0  #b00000000 #b00000000000000000000000)) #b00000000000000000000000000000001 #b00000000000000000000000000000000))) (= |main::if0::anonymous1::__VERIFIER_assert__cond_new| |main::if0::anonymous1::__tmp_1_new|))) (__loc_92_1 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1_new| |main::if0::anonymous1::__VERIFIER_assert__cond_new| |main_ret|))))
(assert (forall ((|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> (and (__loc_92_1 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) (= |main::if0::anonymous1::__VERIFIER_assert__cond| #b00000000000000000000000000000000)) (main_error_4 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|))))
(assert (forall ((|main::main__x1| (_ FloatingPoint 8 24)) (|main::main__x| (_ FloatingPoint 8 24)) (|main::if0::anonymous1::__tmp_1| (_ BitVec 32)) (|main::if0::anonymous1::__VERIFIER_assert__cond| (_ BitVec 32)) (|main_ret| (_ BitVec 32))) (=> (main_error_4 |main::main__x1| |main::main__x| |main::if0::anonymous1::__tmp_1| |main::if0::anonymous1::__VERIFIER_assert__cond| |main_ret|) false)))

(check-sat)
(exit)